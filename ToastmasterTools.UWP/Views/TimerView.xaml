<Page x:Class="ToastmasterTools.UWP.Views.TimerView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:ToastmasterTools.Core.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      DataContext="{Binding Source={StaticResource Locator},
                            Path=TimerViewModel}"
      mc:Ignorable="d">

    <Grid x:Name="LayoutGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger"
                                         MinWindowHeight="500"
                                         MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DefaultTimes.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNarrowWidth">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowWidthTrigger"
                                         MinWindowHeight="0"
                                         MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DefaultTimes.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.Background>
            <SolidColorBrush Color="{x:Bind ViewModel.Timer.SelectedBackground, Mode=OneWay}" />
        </Grid.Background>
        <Grid x:Name="ContentGrid">
            <Grid x:Name="TimerGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Height="90"
                      HorizontalAlignment="Center"
                      Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="60" />
                    </Grid.RowDefinitions>
                    <HyperlinkButton x:Name="LessonName"
                                     HorizontalAlignment="Center"
                                     Click="ShowSpeechUI"
                                     Content="{x:Bind ViewModel.Timer.CurrentSpeech.SpeechType.Name, Mode=OneWay}"
                                     FontSize="18"
                                     Foreground="{StaticResource ComplementaryColor}"
                                     Padding="0" />
                    <controls:ToastmasterMemberPicker Grid.Row="1" Foreground="{StaticResource ComplementaryColor}"
                                                DataContext="{x:Bind ViewModel.MemberSelector}"
                                                Visibility="{x:Bind ViewModel.IsLoggedIn, Converter={StaticResource BooleanToVisiblityConverter}}" />
                </Grid>
                <Grid Grid.Row="1"
                      Margin="0 0 0 50"
                      Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}">
                    <controls:ToastmastersTimer DataContextChanged="{x:Bind ViewModel.SetTimer}" />
                </Grid>
            </Grid>
            <Grid Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource BooleanToVisiblityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="20*" />
                </Grid.RowDefinitions>
                <controls:ToastmasterSpeechSelector Margin="0 20 0 0" MinWidth="300" HorizontalAlignment="Center" Foreground="{StaticResource ComplementaryColor}" DataContext="{x:Bind ViewModel.SpeechSelector}"></controls:ToastmasterSpeechSelector>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <controls:TimePicker x:Name="GreenTimePicker"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedSpeechType.GreenCardTime, Mode=TwoWay}" />
                    <controls:TimePicker x:Name="YellowTimePicker"
                                         Grid.Row="1"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedSpeechType.YellowCardTime, Mode=TwoWay}" />
                    <controls:TimePicker x:Name="RedTimePicker"
                                         Grid.Row="2"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedSpeechType.RedCardTime, Mode=TwoWay}" />
                </Grid>
                <Viewbox Grid.Row="2" Stretch="None">
                    <StackPanel Margin="0 20 0 0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button Click="{x:Bind ViewModel.SelectLesson}"
                                Content="Ok"
                                Foreground="White" />
                        <Button Margin="20 0 0 0"
                                Content="Save"
                                Foreground="White" />
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>
    </Grid>
</Page>