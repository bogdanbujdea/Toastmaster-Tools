<Page x:Class="ToastmastersTimer.UWP.Views.TimerView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:ToastmastersTimer.UWP.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      DataContext="{Binding Source={StaticResource Locator},
                            Path=TimerViewModel}"
      mc:Ignorable="d">

    <Grid x:Name="LayoutGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger"
                                         MinWindowHeight="500"
                                         MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DefaultTimes.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNarrowWidth">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowWidthTrigger"
                                         MinWindowHeight="0"
                                         MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="DefaultTimes.Margin" Value="0" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.Background>
            <SolidColorBrush Color="{x:Bind ViewModel.Timer.SelectedBackground, Mode=OneWay}" />
        </Grid.Background>
        <Grid x:Name="ContentGrid">
            <Grid x:Name="TimerGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="100" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid Height="90"
                      HorizontalAlignment="Center"
                      Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                        <RowDefinition Height="60" />
                    </Grid.RowDefinitions>
                    <HyperlinkButton x:Name="LessonName"
                                     HorizontalAlignment="Center"
                                     Click="ShowSpeechUI"
                                     Content="{x:Bind ViewModel.Timer.CurrentSpeech.Lesson.Name, Mode=OneWay}"
                                     FontSize="18"
                                     Foreground="White"
                                     Padding="0" />
                    <ComboBox x:Name="MembersList"
                              Grid.Row="1"
                              Height="60"
                              Visibility="{x:Bind ViewModel.IsLoggedIn, Converter={StaticResource BooleanToVisiblityConverter}}"
                              HorizontalAlignment="Center"
                              ItemsSource="{x:Bind ViewModel.Members, Mode=OneWay}"
                              PlaceholderText="Choose a speaker"
                              Style="{StaticResource MembersComboBoxStyle}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Margin="2"
                                           FontSize="18"
                                           Text="{Binding Name}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
                <Grid Grid.Row="1"
                      Margin="0 0 0 50"
                      Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}">
                    <controls:ToastmastersTimer DataContextChanged="{x:Bind ViewModel.SetTimer}" />
                </Grid>

            </Grid>
            <Grid Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource BooleanToVisiblityConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*" />
                    <RowDefinition Height="60*" />
                    <RowDefinition Height="20*" />
                </Grid.RowDefinitions>
                <ComboBox x:Name="DefaultTimes"
                          MinWidth="300"
                          Margin="0 20 0 0"
                          HorizontalAlignment="Center"
                          ItemsSource="{x:Bind ViewModel.Lessons, Mode=OneWay}"
                          SelectedItem="{Binding SelectedLesson,
                                                 Mode=TwoWay}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                    <ColumnDefinition Width="20*" />
                                </Grid.ColumnDefinitions>
                                <TextBlock FontSize="18" Text="{Binding Name}" />
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <controls:TimePicker x:Name="GreenTimePicker"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedLesson.GreenCardTime, Mode=TwoWay}" />
                    <controls:TimePicker x:Name="YellowTimePicker"
                                         Grid.Row="1"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedLesson.YellowCardTime, Mode=TwoWay}" />
                    <controls:TimePicker x:Name="RedTimePicker"
                                         Grid.Row="2"
                                         HorizontalAlignment="Center"
                                         SelectedCardTime="{x:Bind ViewModel.SelectedLesson.RedCardTime, Mode=TwoWay}" />
                </Grid>
                <Viewbox Grid.Row="2" Stretch="None">
                    <StackPanel Margin="0 20 0 0"
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                        <Button Click="{x:Bind ViewModel.SelectLesson}"
                                Content="Ok"
                                Foreground="White" />
                        <Button Margin="20 0 0 0"
                                Content="Save"
                                Foreground="White" />
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>
    </Grid>
</Page>
