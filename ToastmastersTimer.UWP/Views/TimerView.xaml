<Page
    x:Class="ToastmastersTimer.UWP.Views.TimerView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:ToastmastersTimer.UWP.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="using:ToastmastersTimer.UWP.ViewModels"
    xmlns:controls="using:ToastmastersTimer.UWP.Controls"
    xmlns:converters="using:Template10.Converters"
    DataContext="{Binding Source={StaticResource Locator}, Path=TimerViewModel}"
    mc:Ignorable="d">

    <Grid x:Name="LayoutGrid">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowHeight="500" MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters >
                        <Setter Target="DefaultTimes.Margin" Value="0"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNarrowWidth">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowWidthTrigger" MinWindowHeight="0" MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters >
                        <Setter Target="DefaultTimes.Margin" Value="0"></Setter>
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <Grid.Background>
            <SolidColorBrush Color="{x:Bind ViewModel.Timer.SelectedBackground, Mode=OneWay}"></SolidColorBrush>
        </Grid.Background>
        <Grid x:Name="ContentGrid">
            <Grid x:Name="TimerGrid">
                <Grid.RowDefinitions>
                    <RowDefinition Height="90*"></RowDefinition>
                    <RowDefinition Height="10*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}" >
                    <controls:ToastmastersTimer DataContextChanged="{x:Bind ViewModel.SetTimer}"></controls:ToastmastersTimer>
                </Grid>
                <Grid Grid.Row="1">
                    <HyperlinkButton Content="Choose speech type" Click="ShowSpeechUI_" HorizontalAlignment="Center" Foreground="White" Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource ReversedBooleanToVisiblityConverter}}"></HyperlinkButton>
                </Grid>
            </Grid>
            <Grid Visibility="{x:Bind ViewModel.SpeechUIIsVisible, Mode=OneWay, Converter={StaticResource BooleanToVisiblityConverter}}" >
                <!--SpeechUIIsVisible-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="20*"></RowDefinition>
                    <RowDefinition Height="60*"></RowDefinition>
                    <RowDefinition Height="20*"></RowDefinition>
                </Grid.RowDefinitions>
                <ComboBox x:Name="DefaultTimes" SelectedItem="{Binding SelectedLesson, Mode=TwoWay}" ItemsSource="{x:Bind ViewModel.Lessons, Mode=OneWay}" MinWidth="300" HorizontalAlignment="Center" Margin="0 20 0 0">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="40*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                    <ColumnDefinition Width="20*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding Name}" FontSize="18"></TextBlock>
                            </Grid>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Grid Grid.Row="1">
                    <Grid.RowDefinitions>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                        <RowDefinition></RowDefinition>
                    </Grid.RowDefinitions>
                    <controls:TimePicker x:Name="GreenTimePicker" SelectedCardTime="{x:Bind ViewModel.SelectedLesson.GreenCardTime, Mode=TwoWay}" HorizontalAlignment="Center"></controls:TimePicker>
                    <controls:TimePicker x:Name="YellowTimePicker" Grid.Row="1" SelectedCardTime="{x:Bind ViewModel.SelectedLesson.YellowCardTime, Mode=TwoWay}" HorizontalAlignment="Center" ></controls:TimePicker>
                    <controls:TimePicker x:Name="RedTimePicker" Grid.Row="2" SelectedCardTime="{x:Bind ViewModel.SelectedLesson.RedCardTime, Mode=TwoWay}" HorizontalAlignment="Center" ></controls:TimePicker>
                </Grid>
                <Viewbox Grid.Row="2" Stretch="None">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Margin="0 20 0 0">
                        <Button Content="Ok" Foreground="White" Click="{x:Bind ViewModel.SelectLesson}"></Button>
                        <Button Content="Save" Foreground="White" Margin="20 0 0 0"></Button>
                    </StackPanel>
                </Viewbox>
            </Grid>
        </Grid>
    </Grid>
</Page>
